<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.vip.mapper.GoodsInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.vip.pojo.GoodsInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="goodsSN" property="goodssn" jdbcType="VARCHAR" />
    <result column="goodsName" property="goodsname" jdbcType="VARCHAR" />
    <result column="marketPrice" property="marketprice" jdbcType="DOUBLE" />
    <result column="realPrice" property="realprice" jdbcType="DOUBLE" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="lastUpdateTime" property="lastupdatetime" jdbcType="TIMESTAMP" />
    <result column="createdBy" property="createdby" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.vip.pojo.GoodsInfoWithBLOBs" extends="BaseResultMap" >
    <result column="goodsFormat" property="goodsformat" jdbcType="LONGVARCHAR" />
    <result column="note" property="note" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goodsSN, goodsName, marketPrice, realPrice, state, num, unit, createTime, lastUpdateTime, 
    createdBy
  </sql>
  <sql id="Blob_Column_List" >
    goodsFormat, note
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.vip.pojo.GoodsInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.vip.pojo.GoodsInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from goods_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.vip.pojo.GoodsInfoExample" >
    delete from goods_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.vip.pojo.GoodsInfoWithBLOBs" >
    insert into goods_info (id, goodsSN, goodsName, 
      marketPrice, realPrice, state, 
      num, unit, createTime, 
      lastUpdateTime, createdBy, goodsFormat, 
      note)
    values (#{id,jdbcType=BIGINT}, #{goodssn,jdbcType=VARCHAR}, #{goodsname,jdbcType=VARCHAR}, 
      #{marketprice,jdbcType=DOUBLE}, #{realprice,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{unit,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{lastupdatetime,jdbcType=TIMESTAMP}, #{createdby,jdbcType=VARCHAR}, #{goodsformat,jdbcType=LONGVARCHAR}, 
      #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.vip.pojo.GoodsInfoWithBLOBs" >
    insert into goods_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodssn != null" >
        goodsSN,
      </if>
      <if test="goodsname != null" >
        goodsName,
      </if>
      <if test="marketprice != null" >
        marketPrice,
      </if>
      <if test="realprice != null" >
        realPrice,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="lastupdatetime != null" >
        lastUpdateTime,
      </if>
      <if test="createdby != null" >
        createdBy,
      </if>
      <if test="goodsformat != null" >
        goodsFormat,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodssn != null" >
        #{goodssn,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="marketprice != null" >
        #{marketprice,jdbcType=DOUBLE},
      </if>
      <if test="realprice != null" >
        #{realprice,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastupdatetime != null" >
        #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="goodsformat != null" >
        #{goodsformat,jdbcType=LONGVARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.vip.pojo.GoodsInfoExample" resultType="java.lang.Integer" >
    select count(*) from goods_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodssn != null" >
        goodsSN = #{record.goodssn,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsname != null" >
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.marketprice != null" >
        marketPrice = #{record.marketprice,jdbcType=DOUBLE},
      </if>
      <if test="record.realprice != null" >
        realPrice = #{record.realprice,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastupdatetime != null" >
        lastUpdateTime = #{record.lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdby != null" >
        createdBy = #{record.createdby,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsformat != null" >
        goodsFormat = #{record.goodsformat,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update goods_info
    set id = #{record.id,jdbcType=BIGINT},
      goodsSN = #{record.goodssn,jdbcType=VARCHAR},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      marketPrice = #{record.marketprice,jdbcType=DOUBLE},
      realPrice = #{record.realprice,jdbcType=DOUBLE},
      state = #{record.state,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      lastUpdateTime = #{record.lastupdatetime,jdbcType=TIMESTAMP},
      createdBy = #{record.createdby,jdbcType=VARCHAR},
      goodsFormat = #{record.goodsformat,jdbcType=LONGVARCHAR},
      note = #{record.note,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods_info
    set id = #{record.id,jdbcType=BIGINT},
      goodsSN = #{record.goodssn,jdbcType=VARCHAR},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      marketPrice = #{record.marketprice,jdbcType=DOUBLE},
      realPrice = #{record.realprice,jdbcType=DOUBLE},
      state = #{record.state,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      lastUpdateTime = #{record.lastupdatetime,jdbcType=TIMESTAMP},
      createdBy = #{record.createdby,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.vip.pojo.GoodsInfoWithBLOBs" >
    update goods_info
    <set >
      <if test="goodssn != null" >
        goodsSN = #{goodssn,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null" >
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="marketprice != null" >
        marketPrice = #{marketprice,jdbcType=DOUBLE},
      </if>
      <if test="realprice != null" >
        realPrice = #{realprice,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastupdatetime != null" >
        lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="goodsformat != null" >
        goodsFormat = #{goodsformat,jdbcType=LONGVARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.vip.pojo.GoodsInfoWithBLOBs" >
    update goods_info
    set goodsSN = #{goodssn,jdbcType=VARCHAR},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      marketPrice = #{marketprice,jdbcType=DOUBLE},
      realPrice = #{realprice,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      createdBy = #{createdby,jdbcType=VARCHAR},
      goodsFormat = #{goodsformat,jdbcType=LONGVARCHAR},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.vip.pojo.GoodsInfo" >
    update goods_info
    set goodsSN = #{goodssn,jdbcType=VARCHAR},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      marketPrice = #{marketprice,jdbcType=DOUBLE},
      realPrice = #{realprice,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      createdBy = #{createdby,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.vip.mapper.AuFunctionMapper" >
  <resultMap id="BaseResultMap" type="cn.vip.pojo.AuFunction" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="function_code" property="functionCode" jdbcType="VARCHAR" />
    <result column="function_name" property="functionName" jdbcType="VARCHAR" />
    <result column="func_url" property="funcUrl" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, function_code, function_name, func_url, parent_id, creation_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.vip.pojo.AuFunctionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from au_function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from au_function
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from au_function
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.vip.pojo.AuFunctionExample" >
    delete from au_function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.vip.pojo.AuFunction" >
    insert into au_function (id, function_code, function_name, 
      func_url, parent_id, creation_time
      )
    values (#{id,jdbcType=BIGINT}, #{functionCode,jdbcType=VARCHAR}, #{functionName,jdbcType=VARCHAR}, 
      #{funcUrl,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{creationTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.vip.pojo.AuFunction" >
    insert into au_function
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="functionCode != null" >
        function_code,
      </if>
      <if test="functionName != null" >
        function_name,
      </if>
      <if test="funcUrl != null" >
        func_url,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="functionCode != null" >
        #{functionCode,jdbcType=VARCHAR},
      </if>
      <if test="functionName != null" >
        #{functionName,jdbcType=VARCHAR},
      </if>
      <if test="funcUrl != null" >
        #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.vip.pojo.AuFunctionExample" resultType="java.lang.Integer" >
    select count(*) from au_function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update au_function
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.functionCode != null" >
        function_code = #{record.functionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.functionName != null" >
        function_name = #{record.functionName,jdbcType=VARCHAR},
      </if>
      <if test="record.funcUrl != null" >
        func_url = #{record.funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.creationTime != null" >
        creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update au_function
    set id = #{record.id,jdbcType=BIGINT},
      function_code = #{record.functionCode,jdbcType=VARCHAR},
      function_name = #{record.functionName,jdbcType=VARCHAR},
      func_url = #{record.funcUrl,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      creation_time = #{record.creationTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.vip.pojo.AuFunction" >
    update au_function
    <set >
      <if test="functionCode != null" >
        function_code = #{functionCode,jdbcType=VARCHAR},
      </if>
      <if test="functionName != null" >
        function_name = #{functionName,jdbcType=VARCHAR},
      </if>
      <if test="funcUrl != null" >
        func_url = #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.vip.pojo.AuFunction" >
    update au_function
    set function_code = #{functionCode,jdbcType=VARCHAR},
      function_name = #{functionName,jdbcType=VARCHAR},
      func_url = #{funcUrl,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      creation_time = #{creationTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getMainFunctionList" parameterType="cn.vip.pojo.AuAuthority" resultMap="BaseResultMap">
      SELECT * FROM au_function WHERE id IN(
          SELECT function_id FROM au_authority WHERE parent_id = 0 and role_id = #{roleId}
      )
  </select>

  <select id="getSubFunctionList" parameterType="cn.vip.pojo.AuFunction" resultMap="BaseResultMap">
      select * from au_function where parent_id = #{id}
  </select>
</mapper>